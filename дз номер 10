#include <iostream>
#include <string>
#include <map>
#include <limits> // для numeric_limits



enum class ErrorCode : int {
    Success = 0,
    FileNotFound = 404,
    AccessDenied = 403,
    ServerError = 500
};



std::map<ErrorCode, std::string> error_messages = {
    {ErrorCode::Success, "Успешно"},
    {ErrorCode::FileNotFound, "Файл не найден"},
    {ErrorCode::AccessDenied, "Доступ запрещен"},
    {ErrorCode::ServerError, "Ошибка сервера"}
};



ErrorCode getErrorCodeFromUser() {
    int errorCode;
    while (true) {
        std::cout << "Введите код ошибки: ";
        if (std::cin >> errorCode) {
            
            for (const auto& pair : error_messages) {
                if (static_cast<int>(pair.first) == errorCode) {
                    return static_cast<ErrorCode>(errorCode);
                }
            }
            std::cout << "Неверный код ошибки. Попробуйте еще раз." << std::endl;
        } else {
            std::cout << "Неверный ввод. Попробуйте еще раз." << std::endl;
            std::cin.clear(); 
            std::cin.ignore(std::numeric_limits<std::streamsize>::max(), '\n'); 
        }
    }
}


int main() {
    ErrorCode errorCode = getErrorCodeFromUser();
    std::cout << "Сообщение об ошибке: " << error_messages[errorCode] << std::endl;
    return 0;
}

